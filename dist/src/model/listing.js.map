{"version":3,"sources":["model/listing.ts"],"names":[],"mappings":";AACA,yBAAsC,oBAAoB,CAAC,CAAA;AAG3D,wBAAa,CAAC,MAAM,CAAC,gBAAgB,EAAE,UAAU,IAAQ,EAAE,MAAa;AAExE,CAAC,CAAC,CAAC;AAEH,wBAAa,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM;QAC5B,IAAI,CAAC,OAAO,CAAC,WAAW;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI;QACjB,IAAI,CAAC,OAAO,CAAC,KAAK;QAClB,IAAI,CAAC,OAAO,CAAC,WAAW;QACxB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACxB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC;QAC1B,MAAM,CAAC,CAAC,CAAA;IACV,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC;AAuBoB","file":"model/listing.js","sourcesContent":["import mongoose = require(\"mongoose\");\nimport {IListing, ListingSchema} from '../schema/IListing';\nimport Promise = require('bluebird');\n\nListingSchema.static(\"createFromJSON\", function (json:any, source:string) {\n\n});\n\nListingSchema.virtual('address.full').get(function () {\n  var add = [this.address.street,\n    this.address.unit_number,\n    this.address.city,\n    this.address.state,\n    this.address.postal_code,\n    this.address.country];\n  add = add.filter(function (v) {\n    return v\n  });\n  return add.join(', ');\n});\n\n\ninterface IListingModel extends IListing, mongoose.Document, MongoosePromisified {\n  createFromJSON(json:any, source:string):IListingModel;\n  address:{\n    street:string,\n    unit_number:string,\n    city:string,\n    state:string,\n    postal_code:string,\n    country:string,\n    additional_address:any,\n    full:string\n  }\n}\n\nexport interface MongoosePromisified {\n  updateAsync<T>(doc:Object, options?:Object):Promise<T>;\n  updateAsync<T>(cond:Object, update:Object, options:Object):Promise<T>;\n  saveAsync<T>(callback?:(err:any, res:T) => void):Promise<T>;\n}\n\nexport {IListingModel};\n\n\n "],"sourceRoot":"./src"}